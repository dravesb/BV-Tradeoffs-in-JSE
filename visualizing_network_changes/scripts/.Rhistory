R_mats[[1]] <- rbind(c(1, 0),
c(0, 1))
R_mats[[2]] <- rbind(c(1, 0),
c(0, 0))
R_mats[[3]] <- rbind(c(1, 0),
c(0, -1))
R_mats[[4]] <- rbind(c(1, 0.5),
c(0.5, 1))
R_mats[[5]] <- rbind(c(1, 0),
c(0, -1.5))
Rtil <- make_omni(R_mats)
#make Ptil
P_mats <- lapply(R_mats, function(r) X %*% tcrossprod(r, X))
Ptil <- make_omni(P_mats)
#sample As
A_list <- lapply(P_mats, function(p) Matrix(sampP(p)))
#visualize
names <- c('SBM', 'ER', 'Disassortative\n SBM', 'Unbalanced\n SBM', 'Bipartite')
p1 <- image(A_list[[1]], xlab = '', ylab = '', sub = names[1], border.col = NA,
col.regions = adjustcolor('blue', alpha.f = 0.6), axes = FALSE)
p2 <- image(A_list[[2]], xlab = '', ylab = '', sub = names[2], border.col = NA,
col.regions = adjustcolor('blue', alpha.f = 0.6), axes = FALSE)
p3 <- image(A_list[[3]], xlab = '', ylab = '', sub = names[3], border.col = NA,
col.regions = adjustcolor('blue', alpha.f = 0.6), axes = FALSE)
p4 <- image(A_list[[4]], xlab = '', ylab = '', sub = names[4], border.col = NA,
col.regions = adjustcolor('blue', alpha.f = 0.6), axes = FALSE)
p5 <- image(A_list[[5]], xlab = '', ylab = '', sub = names[5], border.col = NA,
col.regions = adjustcolor('blue', alpha.f = 0.6), axes = FALSE)
#skree plot
evals <- eigen(Rtil)$values
plot(evals, ylab = 'Eigenvalues of Rtil')
evalus
evals
round(evals, 3)
tmp$values
-10:10
order(abs(-10:10))
order(abs(-10:10), decreasing = TRUE)
B
rankMatrix(Rtil)
B <- ase(Rtil, d)
Lb <- kronecker(diag(m), X) %*% B
Atil <- make_omni(A_list)
Z <- ase(Atil, d1)
Atil <- make_omni(A_list)
Z <- ase(Atil, d)
Z
dim(Z)
d
evals
round(abs(evals), 3)
#get full rank of matrix
d <- length(which(abs(evals) > 1e-6))
d
#set up theoretic concentration
B <- ase(Rtil, d)
Lb <- kronecker(diag(m), X) %*% B
#Compare ASE(Atil, d) to Lb
Atil <- make_omni(A_list)
Z <- ase(Atil, d)
#rotate Z to Lb
Z.rot <- procrustes(Z, Lb)$X.new
#get residuals
R <- Lb - Z.rot
R
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,2],
CX = Lb[,1], CY = Lb[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#make plotting dataframe
df <- data.frame(X = R[,3], Y = R[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,3], Y = Z.rot[,4],
CX = Lb[,3], CY = Lb[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,3], Y = Z.rot[,4],
CX = Lb[,3], CY = Lb[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,2], Y = Z.rot[,3],
CX = Lb[,2], CY = Lb[,3],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,2],
CX = Lb[,1], CY = Lb[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#get full rank of matrix
d <- length(which(abs(evals) > 1e-6))
#set up theoretic concentration
B <- ase(Rtil, d)
Lb <- kronecker(diag(m), X) %*% B
#Compare ASE(Atil, d) to Lb
Atil <- make_omni(A_list)
Z <- ase_abs(Atil, d)
ase_abs <- function(A, d, d_start = 1){
tmp <- eigen(A)
ind <- order(abs(tmp$values), decreasing = TRUE)[1:d]
U <- tmp$vectors[, ind]
S <- sqrt(abs(tmp$values[ind]))
U %*% S
}
#get full rank of matrix
d <- length(which(abs(evals) > 1e-6))
#set up theoretic concentration
B <- ase_abs(Rtil, d)
Lb <- kronecker(diag(m), X) %*% B
dim(Lb)
d
#set up theoretic concentration
B <- ase_abs(Rtil, d)
B
tmp <- eigen(A)
A <- Atil
tmp <- eigen(A)
ind <- order(abs(tmp$values), decreasing = TRUE)[1:d]
ind
U <- tmp$vectors[, ind]
S <- sqrt(abs(tmp$values[ind]))
dim(U)
dim(S)
S <- diag(sqrt(abs(tmp$values[ind])))
dim(S)
U %*% S
ase_abs <- function(A, d, d_start = 1){
tmp <- eigen(A)
ind <- order(abs(tmp$values), decreasing = TRUE)[1:d]
U <- tmp$vectors[, ind]
S <- diag(sqrt(abs(tmp$values[ind])))
U %*% S
}
#get full rank of matrix
d <- length(which(abs(evals) > 1e-6))
#set up theoretic concentration
B <- ase_abs(Rtil, d)
Lb <- kronecker(diag(m), X) %*% B
dim(B)
dim(Lb)
#Compare ASE(Atil, d) to Lb
Atil <- make_omni(A_list)
Z <- ase_abs(Atil, d)
dim(Z)
#get residuals
R <- Lb - Z.rot
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
Lb
#Compare ASE(Atil, d) to Lb
Atil <- make_omni(A_list)
Z <- ase_abs(Atil, d)
#rotate Z to Lb
Z.rot <- procrustes(Z, Lb)$X.new
#get residuals
R <- Lb - Z.rot
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
#get full rank of matrix
d <- length(which(abs(evals) > 1e-6))
#set up theoretic concentration
B <- ase_abs(Rtil, d)
Lb <- kronecker(diag(m), X) %*% B
#Compare ASE(Atil, d) to Lb
Atil <- make_omni(A_list)
Z <- ase_abs(Atil, d)
#rotate Z to Lb
Z.rot <- procrustes(Z, Lb)$X.new
#get residuals
R <- Lb - Z.rot
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
library(plot3D)
#make plotting dataframe
df <- data.frame(X = R[,3], Y = R[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,2],
CX = Lb[,1], CY = Lb[,2],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,3],
CX = Lb[,1], CY = Lb[,3],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
df <- data.frame(X = Z.rot[,2], Y = Z.rot[,4],
CX = Lb[,2], CY = Lb[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,2], Y = Z.rot[,4],
CX = Lb[,2], CY = Lb[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,3],
CX = Lb[,1], CY = Lb[,3],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
p3
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
labs(title = 'Positive Eigenvalues')
p3
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
labs(title = 'Positive Eigenvalues')+
theme_bw()
p5 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Negative Eigenvalues')+
facet_grid(cols = vars(Graph))+
theme_bw()
p4
df <- data.frame(X = Z.rot[,2], Y = Z.rot[,4],
CX = Lb[,2], CY = Lb[,4],
Graph = as.factor(rep(1:m, each = n)),
Community = as.factor(rep(samp, m)))
p5 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Negative Eigenvalues')+
facet_grid(cols = vars(Graph))+
theme_bw()
p4
p5
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
p2
df <- data.frame(X = Z.rot[,2], Y = Z.rot[,4],
CX = Lb[,2], CY = Lb[,4],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p5 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Negative Eigenvalues')+
facet_grid(cols = vars(Graph))+
theme_bw()
p5
p6 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Leading Eigenvalues')+
facet_grid(cols = vars(Graph))+
theme_bw()
p6
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,2],
CX = Lb[,1], CY = Lb[,2],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p6 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Leading Eigenvalues')+
facet_grid(cols = vars(Graph))+
theme_bw()
p6
p6 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Leading Eigenvalues',
x = 'Positive Eigenvector',
y = 'Negative Eigenvector')+
facet_grid(cols = vars(Graph))+
theme_bw()
p6
p4
ind
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,3],
CX = Lb[,1], CY = Lb[,3],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p4 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
labs(title = 'Positive Eigenvalues')+
theme_bw()
p4
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/positive_eigenvalues_bias.pdf',
p4,
device = 'pdf', width = 10, height = 5)
df <- data.frame(X = Z.rot[,2], Y = Z.rot[,4],
CX = Lb[,2], CY = Lb[,4],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p5 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Negative Eigenvalues')+
facet_grid(cols = vars(Graph))+
theme_bw()
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/negative_eigenvalues_bias.pdf',
p5,
device = 'pdf', width = 10, height = 5)
p5
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,2],
CX = Lb[,1], CY = Lb[,2],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p6 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
labs(title = 'Leading Eigenvalues',
x = 'Positive Eigenvector',
y = 'Negative Eigenvector')+
facet_grid(cols = vars(Graph))+
theme_bw()
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/leading_eigenvalues_bias.pdf',
p6,
device = 'pdf', width = 10, height = 5)
p6
#skree plot
evals <- eigen(Rtil)$values
plot(evals, ylab = 'Eigenvalues of Rtil')
#get d1
d1 <- length(which(evals > 1e-6))
#set up theoretic concentration
B <- ase(Rtil, d1)
Lb <- kronecker(diag(m), X) %*% B
#Compare ASE(Atil, d) to Lb
Atil <- make_omni(A_list)
Z <- ase(Atil, d1)
#rotate Z to Lb
Z.rot <- procrustes(Z, Lb)$X.new
#get residuals
R <- Lb - Z.rot
#make plotting dataframe
df <- data.frame(X = R[,1], Y = R[,2],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p2 <- ggplot(df, aes(X, Y, col = Community))+
geom_point(alpha = 0.5, size = 0.5)+
facet_grid(cols = vars(Graph))+
theme_bw()
#----------------------
# Show bias in plot
#----------------------
df <- data.frame(X = Z.rot[,1], Y = Z.rot[,2],
CX = Lb[,1], CY = Lb[,2],
Graph = as.factor(names[rep(1:m, each = n)]),
Community = as.factor(rep(samp, m)))
p3 <- ggplot(df)+
geom_point(aes(X, Y, col = Community), alpha = 0.25, size = 0.5)+
geom_point(aes(CX, CY), alpha = 0.5, size = 1, shape = 4)+
facet_grid(cols = vars(Graph))+
theme_bw()
#full figure
layout <- matrix(1:2, ncol = 1)
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/bias_residual.pdf',
grid.arrange(p3, p2, layout_matrix = layout),
device = 'pdf', width = 10, height = 5)
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/positive_eigenvalues_bias.pdf',
p4,
device = 'pdf', width = 10, height = 4)
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/positive_eigenvalues_bias.pdf',
p4,
device = 'pdf', width = 8, height = 3)
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/negative_eigenvalues_bias.pdf',
p5,
device = 'pdf', width = 8, height = 3)
ggsave('~/Documents/Work/github/MOMNI/exploratory_analysis/figures/leading_eigenvalues_bias.pdf',
p6,
device = 'pdf', width = 8, height = 3)
X
L
svd(L)
svd(L)$d
svd(-L)$d
