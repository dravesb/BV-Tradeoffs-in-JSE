df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n())) %>%
mutate(Type = rep(c('Multiplex', 'Individual'), c(5, 4)))
colnames(df)[3] <- "Method"
ggplot(df %>% filter(Method != 'Omnicat'),
aes(t, MC_Rate, col = Method, linetype = Type)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10(limits = c(0.05, 0.67), breaks = seq(0.05, 0.7, by = 0.2))+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
head(df)
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
#geom_ribbon(aes(ymin = MC_Rate - se_rate, 0, ymax =  MC_Rate + se_rate, 0), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, 0, ymax =  MC_Rate + se_rate, 0), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, 0, ymax =  MC_Rate + se_rate, 0), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
rm(list = ls())
#-----------------------------
#     format data
#-----------------------------
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
#-----------------------------
#     make plots
#-----------------------------
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, 0, ymax =  MC_Rate + se_rate, 0), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
head(df)
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
#-----------------------------
#     read in libraries
#-----------------------------
library(ggplot2)
library(dplyr)
library(reshape2)
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 200*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 200*sd(value, na.rm = TRUE)/sqrt(n()))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 200*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
#se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
se_rate = 1.96*sd(value, na.rm = TRUE))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
#se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
se_rate = 1.96*sd(value, na.rm = TRUE))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_sqrt()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 0)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 0.0001)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 1)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 1)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 0)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 0)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = min(c(MC_Rate - se_rate, 0)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = ifelse(MC_Rate - 1.96*sd(value, na.rm = TRUE)/sqrt(n()) <= 0,
0.001, MC_Rate - 1.96*sd(value, na.rm = TRUE)/sqrt(n())))
head(Df)
head(df)
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = ifelse(MC_Rate - 1.96*sd(value, na.rm = TRUE)/sqrt(n()) <= 0,
MC_Rate - 0.001, MC_Rate - 1.96*sd(value, na.rm = TRUE)/sqrt(n())))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = ifelse(MC_Rate - 1.96*sd(value, na.rm = TRUE)/sqrt(n()) <= 0,
MC_Rate - 0.001, MC_Rate - 1.96*sd(value, na.rm = TRUE)/sqrt(n())))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 0)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
#scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = max(c(MC_Rate - se_rate, 0)), ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
head(df)
df$MC_Rate - df$se_rate
min(df$MC_Rate - df$se_rate)
log(min(df$MC_Rate - df$se_rate))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
df <- as.data.frame(read.csv("~/Documents/Work/github/BJSE/multiple_network_methods/data/data.csv")[,-1])
#group by iteration & method
df <- df %>% melt(id.vars = 1:3) %>%
group_by(network_size, t, variable) %>%
summarize(MC_Rate = mean(value, na.rm = TRUE),
se_rate = 1.96*sd(value, na.rm = TRUE)/sqrt(n()))
colnames(df)[3] <- "Method"
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
ggplot(df, aes(t, MC_Rate, col = Method)) +
geom_point(size = 2, alpha = .3)+
geom_line()+
#geom_errorbar(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate),alpha = .5,width = .05)+
geom_ribbon(aes(ymin = MC_Rate - se_rate, ymax =  MC_Rate + se_rate), alpha = .1, linetype = 0)+
theme_bw()+
scale_y_log10()+
labs(x = "t",
y = expression(paste('log'[10], '(Misclassification Rate)')))
#-----------------------------
#     save plot
#-----------------------------
ggsave("multiple_methods_mc_comp.pdf",
width = 7, height = 5, units = "in",
device = "pdf",
path = "~/Documents/Work/github/BJSE/multiple_network_methods/figures/")
choose(6,3)*(0.5)^6
5/16
#     Load up base functions
#-----------------------------
#funcitons
ase_abs <- function(A, d){
tmp <- eigen(A)
ind <- order(abs(tmp$values), decreasing = TRUE)[1:d]
U <- tmp$vectors[, ind]
S <- diag(sqrt(abs(tmp$values[ind])))
U %*% S
}
ase_abs <- function(A, d){
tmp <- svd(A)
Y <- tmp$u[,1:d] %*% diag(sqrt(tmp$d[1:d]))
}
make_omni <- function(mats){
#H(x) = (1x^T + x1^T)/2
H <- function(g,m){
ones <- rep(1, m)
e <- diag(m)[,g]
.5 * (tcrossprod(ones,e) + tcrossprod(e,ones))
}
#sum up each kronecker
m <- length(mats)
Reduce("+", lapply(1:m, function(x) kronecker(H(x,m), mats[[x]])))
}
#sampling functions
sampP <- function(P) {
#set up matrix
n = ncol(P)
A = matrix(0, n, n)
#sample from A
A[upper.tri(A)] <- 1*(runif(sum(upper.tri(P))) < P[upper.tri(P)])
A = A + t(A)
return(A)
}
#source indefinite procruses code from Joshua Agterberg
Qx <- function(X, p, q){
#fetch |S|^{-1/2}
Ipq <- diag(c(rep(1, p),rep(-1, q)))
P <- X %*% tcrossprod(Ipq, X)
tmp <- eigen(P)
vals <- c(tmp$values[1:p], tail(tmp$values, q))
S.sqrt.inv <- diag(1/sqrt(abs(vals)))
#fetch (X^TX)^{1/2}
mat_sqrt <- function(mat){
tmp <- eigen(crossprod(mat))
tmp$vectors %*% tcrossprod(diag(sqrt(tmp$values)), tmp$vectors)
}
XtX.sqrt <- mat_sqrt(X)
#fetch V
V <- eigen(XtX.sqrt)$vectors
#Qx
Qx <- S.sqrt.inv %*% tcrossprod(V, XtX.sqrt)
return(Qx)
}
Qx.inv <- function(Q, p, q){
Ipq <- diag(c(rep(1, p),rep(-1, q)))
return(Ipq %&% tcrossprod(Q, Ipq))
}
#-----------------------------
#     Set up models
#-----------------------------
set.seed(1985)
B <- rbind(c(0.3,0.1, 0.1),
c(0.1, 0.25, 0.15),
c(0.1, 0.15, 0.25))
L <- ase_abs(B,3)
#set up I, p, q
p <- 2; q <- 1; d <- p + q
Ipq <- diag(c(rep(1, p), rep(-1, q)))
L
tcrossprod(L)
crossprod(L)
round(crossprod(L),2)
Delta <- crossprod(L)
Delta_sq <- sqrt(Delta)
Delta
Delta <- round(crossprod(L), 3)
Delta_sq <- sqrt(Delta)
Delta_sq
L
L %*% Delta_sq
tcrossprod(L %*% Delta_sq)
#load up necessary packages
library(ggplot2)
library(dplyr)
library(reshape2)
#source nesseary functions
source("~/Documents/Work/github/BJSE/second_moment/code/basic_functions.R")
#set directory
setwd('~/Documents/Work/github/BJSE/visualizing_network_changes/scripts/')
#-----------------------------
#     Set up Base Model
#-----------------------------
#set up blocks
B <- matrix(c(.25, .05, .05, .25), byrow = T, nrow = 2)
b_ase <- ase(B, 2)
#get latent positions
x1 <- b_ase[1,]; x2 <- b_ase[2,]
#set prior probabilities
pi <- .5
#get rotation (eigenvectors of Delta)
Delta <- pi * tcrossprod(x1) + (1 - pi)*tcrossprod(x2)
R <- eigen(Delta)$vectors
#Apply rotation to x1 and x2
x1_til <- t(R) %*% x1
x2_til <- t(R) %*% x2
#set base latent positions
L <- rbind(t(x1_til), t(x2_til))
#set up latent positions
n <- 50
com <- sample(c(1, 2), size = n, prob = c(pi, 1-pi), replace = TRUE)
X <- L[com,]
X %*%  tcrossprod(solve(crossprod(X))) , X)
X %*% tcrossprod(solve(crossprod(X)), X)
image(Matrix(X %*% tcrossprod(solve(crossprod(X)), X)))
library(Matrix)
image(Matrix(X %*% tcrossprod(solve(crossprod(X)), X)))
U <- svd(X)$u
image(Matrix(tcrossprod(U)))
mat <- rbind(c(1, 1/2), c(.5, 0))
mat
eigen(mat)
eigen(-mat)
mat <- rbind(c(0, -1/2), c(-.5, -1))
eigen(mat)
