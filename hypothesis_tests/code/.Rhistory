geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable))+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(variable != "T_Omni", network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(#variable != "T_Omni",
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free")+
theme_bw()
network_size == 250),
aes(value, col = variable))+
geom_density(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free")+
theme_bw()
histogram
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free_y")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(#variable != "T_Omni",
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free_y")+
theme_bw()
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_wrap(rows = vars(t),
cols = vars(variable),
scales="free_y")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(#variable != "T_Omni",
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_wrap(rows = vars(t),
cols = vars(variable),
scales="free_y")+
theme_bw()
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free_y")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(#variable != "T_Omni",
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free_y")+
theme_bw()
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free")+
theme_bw()
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(~.factor(t, variable),
scales="free")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(#variable != "T_Omni",
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(~.factor(t, variable),
scales="free")+
theme_bw()
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(variable != "T_Omni",
network_size == 250),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(variable),
scales="free")+
theme_bw()
ggplot(as.data.frame(plotdf) %>%
filter(variable == "T_Omni"),
aes(value, col = variable))+
geom_histogram(fill = "white")+
geom_vline(xintercept = qchisq(.95, 2*250), linetype = "dashed", col = "grey")+
facet_grid(rows = vars(t),
cols = vars(network_size),
scales="free")+
theme_bw()
plotdf
df$value[df$variable == "T_Omni"]
plotdf$value[plotdf$variable == "T_Omni"]
max(plotdf$value[plotdf$variable == "T_Omni"])
ggplot(as.data.frame(plotdf) %>%
filter(variable == "T_Omni"),
aes(value, col = variable))+
geom_histogram(fill = "white")+
facet_grid(rows = vars(t),
cols = vars(network_size),
scales="free")+
theme_bw()
#calculate standard errors
se <- as.data.frame(reject_df) %>%
group_by(t, network_size) %>%
summarize(Par_Known_se = 2 * sd(t_known_rej) / sqrt(n()),
Par_Unknown_se = 2 * sd(test_rej) / sqrt(n()),
SemiPar_se = 2 * sd(omni_rej) / sqrt(n())
) %>%
melt(id.vars = c(1,2))
#calculate standard errors
se <- as.data.frame(reject_df) %>%
group_by(t, network_size) %>%
summarize(Par_Known_se = 2 * sd(t_known_rej) / sqrt(n()),
Par_Unknown_se = 2 * sd(test_rej) / sqrt(n()),
SemiPar_se = 2 * sd(omni_rej) / sqrt(n())
) %>%
melt(id.vars = c(1,2))
#calculate means
plotdf <- as.data.frame(reject_df) %>%
group_by(t, network_size) %>%
summarize(Par_Known = mean(t_known_rej),
Par_Unknown = mean(test_rej),
SemiPar = mean(omni_rej)
) %>%
melt(id.vars = c(1,2)) %>%
mutate(se = as.numeric(se[,4]))
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")
#Change variable name
colnames(plotdf)
#Change variable name
colnames(plotdf)[3] <- "Test Statistic"
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")
#calculate means
plotdf <- as.data.frame(reject_df) %>%
group_by(t, network_size) %>%
summarize(Par_Known = mean(t_known_rej),
Par_Unknown = mean(test_rej),
SemiPar = mean(omni_rej)
) %>%
melt(id.vars = c(1,2)) %>%
mutate(se = as.numeric(se[,4]))
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")+
theme_bw()
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")+
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))+
theme_bw()
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")+
scale_fill_discrete(name = "Dose")+
theme_bw()
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")+
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power", title = "Full Graph Hypothesis Testing Power Curve")+
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic")
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
scale_color_manual(labels = c("Parm_K", "Parm", "SemiPar"))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic",
)
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
scale_color_manual(name = "Test",
labels = c("Parm_K", "Parm", "SemiPar"))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic",
)
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
scale_color_manual(name = "Test",
labels = c("Parm_K", "Parm", "SemiPar"))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic"
)
head(plotdf)
table(plotdf[,3])
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
scale_color_manual(name = "Test",
values = c("Par_Known", "Par_Unknown", "SemiPar"),
labels = c("Parm_K", "Parm", "SemiPar"))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic"
)
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
scale_color_manual(name = "Test",
breaks = c("Par_Known", "Par_Unknown", "SemiPar"),
labels = c("Parm_K", "Parm", "SemiPar"))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic"
)
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test Statistic"
)
#visualize
ggplot(plotdf, aes(t, value, col = variable, group = variable))+
geom_point(alpha = 1, size = .1)+
geom_line(alpha = 1)+
geom_ribbon(aes(ymin = value - se, ymax = value + se),
fill = "grey70", alpha = .2, colour = NA)+
geom_hline(yintercept = .05, col = "grey", linetype = "dashed")+
facet_grid(rows = vars(network_size))+
theme_bw()+
labs(x = "t", y = "Empirical Power",
title = "Full Graph Hypothesis Testing Power Curve",
color = "Test\n Statistic"
)
#set up base parameters
net_size <- 500#c(50, 100, 250)
t <- seq(0, .5, by = .1) #c(0, .25, .5, .75, 1)
mc_runs <- 500 #number of iterations
#set up storage
df <- matrix(NA, nrow = length(net_size) * mc_runs * length(t) , ncol = 9)
colnames(df) <- c("network_size", "iter", "t",
"T_known", "T_unknown", "T_Omni",
"t_known_rej", "test_rej", "omni_rej")
here <- 1
#set seed
set.seed(1985)
for(i in 1:length(net_size)){#iterate over network size
#set up threshold on equal group sized X
X_known <- L[c(rep(1, net_size[i]/2), rep(2, net_size[i]/2)),]
thres <- get_T_threshold(X_known)
for(j in 1:length(t)){#iterate over t values
#set S_list and C_list
S_list <- S(C(t[j]))
C_list <- list(diag(2), C(t[j]))
for(k in 1:mc_runs){#number of MC simulations
#sample group assignments
samp <- sample(1:2, size = net_size[i], replace = TRUE)
#set up X and P1 and P2
X <- L[samp,]
P1 <- tcrossprod(X)
P2 <- tcrossprod(X, X %*% C(t[j]))
#define Xtil
Xtil <- rbind(X, X %*% sqrt(C(t[j])))
#sample A1 and A2
A1 <- sampP(P1)
A2 <- sampP(P2)
#make Omni and embedd for Lhat and Z
Lhat <- ase(make_omni(list(A1, A2)), 2)
#procrustes!
Lhat <- procrustes(Lhat, Xtil)$X.new
#make X1 and X2
X1 <- Lhat[1:(net_size[i]),]
X2 <- Lhat[(net_size[i] + 1):(2 * net_size[i]),]
#---------------------
#Get test statistics
#---------------------
#known variance
T_star0 <- sum(get_test_stats_known_variance(samp, L, X1, X2, S_list, C_list)) #statistic
test_rej_known <- ifelse(T_star0 > qchisq(.95, 2 * net_size[i]), 1, 0) #get rejections yes/no
#unknown variance
T_star1 <- sum(get_test_stats(Lhat, net_size[i], X1, X2)) #statistic
test_rej <- ifelse(T_star1 > qchisq(.95, 2 * net_size[i]), 1, 0) #get rejections yes/no
#get omni test statistic & threshold
T_star2 <- sum(apply(X1 - X2, 1, norm2)) #get statistic
omni_rej <- ifelse(T_star2 > thres, 1, 0) #get yes/no based on threshold value
#store results
df[here, ] <- c(net_size[i], k, t[j],
T_star0,T_star1,T_star2,
test_rej_known, test_rej, omni_rej)
#update pointer
here <- here + 1
}
print(j)
}
}
seq(0, .2,length.out = 5)
t <- seq(0, .2,length.out = 5) #c(0, .25, .5, .75, 1)
mc_runs <- 500 #number of iterations
#set up storage
df <- matrix(NA, nrow = length(net_size) * mc_runs * length(t) , ncol = 9)
colnames(df) <- c("network_size", "iter", "t",
"T_known", "T_unknown", "T_Omni",
"t_known_rej", "test_rej", "omni_rej")
here <- 1
#set seed
set.seed(1985)
for(i in 1:length(net_size)){#iterate over network size
#set up threshold on equal group sized X
X_known <- L[c(rep(1, net_size[i]/2), rep(2, net_size[i]/2)),]
thres <- get_T_threshold(X_known)
for(j in 1:length(t)){#iterate over t values
#set S_list and C_list
S_list <- S(C(t[j]))
C_list <- list(diag(2), C(t[j]))
for(k in 1:mc_runs){#number of MC simulations
#sample group assignments
samp <- sample(1:2, size = net_size[i], replace = TRUE)
#set up X and P1 and P2
X <- L[samp,]
P1 <- tcrossprod(X)
P2 <- tcrossprod(X, X %*% C(t[j]))
#define Xtil
Xtil <- rbind(X, X %*% sqrt(C(t[j])))
#sample A1 and A2
A1 <- sampP(P1)
A2 <- sampP(P2)
#make Omni and embedd for Lhat and Z
Lhat <- ase(make_omni(list(A1, A2)), 2)
#procrustes!
Lhat <- procrustes(Lhat, Xtil)$X.new
#make X1 and X2
X1 <- Lhat[1:(net_size[i]),]
X2 <- Lhat[(net_size[i] + 1):(2 * net_size[i]),]
#---------------------
#Get test statistics
#---------------------
#known variance
T_star0 <- sum(get_test_stats_known_variance(samp, L, X1, X2, S_list, C_list)) #statistic
test_rej_known <- ifelse(T_star0 > qchisq(.95, 2 * net_size[i]), 1, 0) #get rejections yes/no
#unknown variance
T_star1 <- sum(get_test_stats(Lhat, net_size[i], X1, X2)) #statistic
test_rej <- ifelse(T_star1 > qchisq(.95, 2 * net_size[i]), 1, 0) #get rejections yes/no
#get omni test statistic & threshold
T_star2 <- sum(apply(X1 - X2, 1, norm2)) #get statistic
omni_rej <- ifelse(T_star2 > thres, 1, 0) #get yes/no based on threshold value
#store results
df[here, ] <- c(net_size[i], k, t[j],
T_star0,T_star1,T_star2,
test_rej_known, test_rej, omni_rej)
#update pointer
here <- here + 1
}
print(j)
}
}
